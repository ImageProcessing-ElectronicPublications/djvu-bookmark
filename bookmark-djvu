#!/usr/bin/env perl
# FIXME: license
# Copyright (C), 2014, 2015 Simon Reinhardt
use 5.010;
use warnings;
use strict;
# do not use floating point arithmetic in divisions
use integer;
use utf8;
use Encode;
use Getopt::Long qw/:config no_ignore_case bundling/;
use File::Temp qw/tempfile/;
use File::Basename;


binmode STDOUT, ':encoding(UTF-8)'; 
binmode STDIN, ':encoding(UTF-8)';
binmode STDERR, ':encoding(UTF-8)';

$_ = decode ('UTF-8', $_) for @ARGV;

my $prog_name = basename ($0);
my $output_filename;
my $print_help = 0;
my $print_version = 0;

GetOptions (
    "output|o=s" => \$output_filename,
    "help|h" => \$print_help,
    "version|V" => \$print_version,
    )
    or exit 1;

if ($print_help) {
    print_help ();
    exit 0;
}

if ($print_version) {
    print_version ();
    exit 0;
}

if (!@ARGV) {
    print_usage ();
    die "error: need at least one non-option argument\n";
}

my $djvu_filename = $ARGV[0];

if (!$output_filename) {
    $output_filename = $djvu_filename;
}

my $bookmarks_filename;

if ($ARGV[1]) {
    $bookmarks_filename = $ARGV[1];
}
else {
    $bookmarks_filename = get_default_filename ($djvu_filename);
}

if (! -e $bookmarks_filename) {
    print_usage ();
    die "error: bookmarks file $bookmarks_filename does not exist.\n";
}

open my $in_fh, '<', $bookmarks_filename
    or die "cannot open $bookmarks_filename: $!\n";
binmode $in_fh, ':encoding(UTF-8)';

my $djvused_outline = write_djvused_outline ($in_fh);

# run external commands
if ($djvu_filename ne $output_filename) {
    system_wrapper ("cp", $djvu_filename, $output_filename);
}

system_wrapper ("djvused", $output_filename, "-e",
		"set-outline $djvused_outline", "-s");


# returns filename
sub write_djvused_outline {
    my $in_fh = shift;
    (my $out_fh, my $out_filename) = tempfile (UNLINK => 1);
    binmode $out_fh, ':encoding(UTF-8)';

    my $regexp = 
	qr/^(?<indent>( {4})*)(?<title>.+?)(\s|\.)+(?<page>-?[0-9]+)\s*$/;
    my $line_number = 0;
    my $offset = 0;
    my $indent_depth;
    my $prev_indent_depth = -1;

    print {$out_fh} "(bookmarks";
    
    while (my $line = <$in_fh>) {
	chomp ($line);
	++$line_number;
	
	# skip blank lines or comments
	next if $line =~ /^\s*$/ or $line =~ /^#/;

	# check for offset marker
	if ($line =~ /^\s*d=(?<difference>-?[0-9]+)\s*$/) {
	    $offset = $+{difference};
	    next;
	}
	
	# match line against $regexp
	if ($line !~ $regexp) {
	    die "error: line $line_number is broken:\n$line\n";
	}
	$indent_depth = length ($+{indent}) / 4;

	my $title = $+{title};
	my $page = $+{page} + $offset;
	
	if ($indent_depth > $prev_indent_depth + 1) {
	    die "too mutch indentation in line $line_number:\n$line\n";
	}

	# deescape backslash infront of hash
	$title =~ s/^\\(\\*)#/$1#/;
	$title = escape_djvused_special_characters ($title);

	# print closing parenthesis for the previous entry
	print {$out_fh} ")"x($prev_indent_depth - $indent_depth + 1), "\n";
	$prev_indent_depth = $indent_depth;
	
	# print this outline item
	print {$out_fh} qq{("$title" "#$page"};
    }

    if ($prev_indent_depth == -1) {
	die "no bookmarks found\n";
    }
    
    # print closing parenthesis
    print {$out_fh} ")"x($prev_indent_depth + 1), "\n", ")", "\n";
    
    # flush buffer
    close $out_fh;
    
    return $out_filename;
}

sub escape_djvused_special_characters {
    # FIXME: check djvused manpage
    my $title = shift;
    $title =~ s/\\/\\\\/g;	    
    $title =~ s/"/\\"/g;
    $title =~ s/\(/\\\(/g;
    $title =~ s/\)/\\\)/g;
    return $title;
}

sub system_wrapper {
    say "command: @_";
    system (@_) == 0
	or die "error: system failed: $?\n"
}

sub get_default_filename {
    my $djvu_filename = shift;
    my $bookmarks_filename;
    
    if ($djvu_filename =~ /\.djvu$/) {
	($bookmarks_filename = $djvu_filename) =~ s/\.djvu/\.bm/;
    }
    else {
	$bookmarks_filename = "${djvu_filename}.bm";
    }

    return $bookmarks_filename;
}

sub print_usage {
    say "Usage: $prog_name [OPTIONS] DJVU-FILENAME [BOOKMARKS_FILE]";
}

sub print_version {
    say "bookmark-djvu 0.1
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law."
}

sub print_help {
    print_usage ();
        say "
FIXME
 Options:
  -o, --output=FILE           do not modify DJVU-FILENAME and write the 
                              bookmarked djvu file to FILE. 
  -h, --help                  print this help screen
  -V, --version               print program version
FIXME: Report bugs to...";
}
