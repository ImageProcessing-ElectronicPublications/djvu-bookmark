#!/usr/bin/env perl

# LICENSE: GPLv3+

use 5.014;
use warnings;
use strict;
use File::Temp qw/tempfile/;
use utf8;
use Test::More;
use YAML::XS qw/LoadFile/;

# create empty djvu
my $djvu = create_djvu (8, ".djvu");

# ################################# #
# compare files after set and get:  #
# ################################# #

system_ok ("../bookmark-djvu -s $djvu input1");

(undef, my $outline) = tempfile (UNLINK => 1);
system_ok ("../bookmark-djvu-extract -s $djvu -o $outline");

# compare
files_ok ($outline, "expected1");
unlink ($outline);
# ######################## #
# check default filenames  #
# ######################## #

$djvu = create_djvu (8, ".djvu");

$outline = ($djvu =~ s/\.djvu$/.bm/r);
say "outline: $outline";
    
system_ok ("cp input1 $outline");
# compare files after set and get:
 
system_ok ("../bookmark-djvu -s $djvu");

unlink ($outline);

system_ok ("../bookmark-djvu-extract -s $djvu");

# compare
files_ok ($outline, "expected1");
unlink ($outline);

# #### #
# YAML #
# #### #

my $djvu = create_djvu (5, ".djvu");

system_ok ("../bookmark-djvu $djvu input1.yaml");

(undef, my $outline) = tempfile (UNLINK => 1);
system_ok ("../bookmark-djvu-extract  $djvu -o $outline");
yaml_ok ("input1.yaml", $outline);

# default filenames

$djvu = create_djvu (5, ".djvu");

$outline = ($djvu =~ s/\.djvu$/.outline/r);
say "outline: $outline";
    
system_ok ("cp input1.yaml $outline");
# compare files after set and get:
 
system_ok ("../bookmark-djvu $djvu");

unlink ($outline);

system_ok ("../bookmark-djvu-extract $djvu");

# compare
yaml_ok ("input1.yaml", $outline);
unlink ($outline);
done_testing ();

sub yaml_ok {
    my $file1 = shift;
    my $file2 = shift;
    is_deeply (LoadFile ($file1), LoadFile ($file2),
	       "yaml_ok: file1=$file1, file2=$file2");
}

sub system_ok {
    my $command = shift;
    is (system ($command), 0, "command: $command");
}

sub files_ok {
    system_ok ("diff -C 3 $_[0] $_[1]");
}

# arguments: page count, suffix
# returns filename
sub create_djvu {
    my $page_count = shift;
    my $suffix = shift;
    
    $page_count > 0 or $page_count = 1;
    
    # create one-page djvu file
    (undef, my $filename) = tempfile (UNLINK => 1, SUFFIX => $suffix);
    system_wrapper ("djvumake $filename INFO=100,100,100");

    my $page;
    if ($page_count > 1) {
	(undef, $page) = tempfile (UNLINK => 1, SUFFIX => ".djvu");
	system_wrapper ("djvumake $page INFO=100,100,100");
    }
    
    for (2..$page_count) {
	system_wrapper ("djvm -i $filename $page");
    }

    return $filename;
}

sub system_wrapper {
    my $command = shift;
    system ($command) == 0
	or die "command '$command' failed with status ", $? >> 8, "\n";
}
